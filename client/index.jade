// Created by Tony on 2/21/15.

head
  title Ketchy Ketch

body

template(name='userList')
  .user-list
    ul
      +each users
        li
          a(href='/users/#{ _id }')
            img.avatar(src=profilePhotoUrl)
            span #{ firstName }

template(name='userNav')
  section.user-nav
    button
      a(href='/users') Back to user list
    button
      a(href='/users/#{ _id }') Show Profile
    button
      a(href='/users/#{ _id }/candidates') Show Candidates
    button
      a(href='/users/#{ _id }/previous_candidates') Show Previous Candidates
    button
      a(href='/users/#{ _id }/connections') Show Connections

template(name='userDetails')
  .user-details
    h1 #{ firstName } Profile
    +userNav

    section.info
      h2 Info
      ul
        li Work: #{ work }
        li Education: #{ education }
        li Age: #{ age }
        li Created At: #{ createdAt }
        li Updated At: #{ updatedAt }
        li About:
          p #{ about }

    section.fb-info
      +with services.facebook
        h2 Facebook Info
        ul
          li Id:
            a(href="https://facebook.com/#{ id }", target='_blank') #{ id } [Go to Profile]
          li Access Token:
            input#fb-access-token(value=accessToken)
          li Email: #{ email }
          li Name: #{ name }
          li Gender: #{ gender }
          li TODO: Many other infos to come, location, work, etc.

      button.update-fb-access-token Update Access Token
      button.clear-photos Clear Photos
      button.reload-fb-photos Reload Facebook Photos

    section.photos
      h2 Photos
      ul
        +each photoUrls
          li
            img(src=this)


template(name='userCandidates')
  .user-candidates
    h1 #{ firstName } Candidates
    +userNav

    section.actions
      h2 Actions
      button.populate-queue Populate Candidate Queue
      button.clear-queue Clear Candidate Queue

    section.candidate-queue
      +userCandidateList candidateQueue

template(name='userPreviousCandidates')
  .user-candidates
    h1 #{ firstName } Previous Candidates
    +userNav

    section.previous-candidates
      +userCandidateList previousCandidates

template(name='userCandidateList')
  ol
    +each this
      li
        a(href='/users/#{ user._id }')
          img.avatar(src=user.profilePhotoUrl)
        span #{ user.firstName }
        span Updated At #{ updatedAt }
        button.remove-candidate Remove
        .my-choice
          span My Choice:
            b #{ choice }
          button.say-yes Say YES!
          button.say-maybe Say Maybe...
          button.say-no Say no :(
        .their-choice
          span Their Choice:
            b #{ findInverse.choice }
          button.say-yes Say YES!
          button.say-maybe Say Maybe...
          button.say-no Say no :(

template(name='userConnections')
  .user-connections
    h1 #{ firstName } Connections
    +userNav

    section.actions
      h2 Actions
      button.clear-all-connections Clear All Connections

    // TODO: Refactor this to be share code with maybe-connections
    section.connection-list.yes-connections
      h3 Marry
      +userConnectionList yesConnections

    section.connection-list.maybe-connections
      h3 Keep
      +userConnectionList maybeConnections

template(name='userConnectionList')
  ol
    +each this
      li
        a(href='/users/#{ currentUser._id }/connections/#{ _id }')
          img.avatar(src=otherUser.profilePhotoUrl)
        span #{ otherUser.firstName }
        button.remove-connection Remove Connection

template(name='userConnectionDetails')
  .user-connection-details
    h1 #{ thisUser.firstName } Connection Details [{{ readableType connection }}]
    +userNav thisUser
    h2
      span #{ thisUser.firstName }
        img.avatar(src=thisUser.profilePhotoUrl)
      span
        button
          a(href='/users/#{ otherUser._id}/connections/#{ connection._id}') ->
      span #{ otherUser.firstName }
        img.avatar(src=otherUser.profilePhotoUrl)

    ul
      li Id: #{ connection._id }
      li Created At: #{ connection.createdAt }
      li Type: {{ readableType connection }}

    h2 Messages
    ol
      +each connection.messages
        li #{ sender.firstName }: #{ text }
    textarea#new-message
    button.send-message Send Message



